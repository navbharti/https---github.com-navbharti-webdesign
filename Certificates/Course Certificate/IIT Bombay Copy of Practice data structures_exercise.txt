1)Simple list creation_exercise_ds
Write a python script that accepts an integer n as user input (with empty prompt)
Create a list of integers from 0 to n-1
Print this list

Example:
Input:
4

Output:
[0, 1, 2, 3]


Solution:
n = int(input())
x=list(range(n))
print(x)

2)More List Creation_exercise_ds

Write a python script that accepts an integer n as user input (with empty prompt)
Store the square of all the odd numbers less than n in a list
Print this list

Example:
Input:
7

Output:	
[1, 9, 25]

Solution:
n = int(input())
result=[]
for i in range(1,n,2):
	result.append(i*i)
print(result)


3)More List Creation with Tuples_exercise_ds
Write a python script that accepts an integer n as user input (with empty prompt)
Store the square of all the odd numbers less than n in a tuple
Print that tuple

Example:
Input:
7

Output:
(1, 9, 25)

Solution:
n = int(input())
result=[]
for i in range(1,n,2):
	result.append(i*i)
print(tuple(result))


5)List Of Fibonacci_exercise_ds
Write a python script that accepts an integer, n (>= 1) from the user.
Store the first n numbers of the Fibonnaci series in a list.
Print this list.
Example:
Input:
5

Output:
[0, 1, 1, 2, 3]

Solution:
n = int(input())
a, b =0, 1
result = [0]
for i in range(n-1):
	result.append(b)
	a,b=b,a+b
print(result)



6)Square a List Integers 1_exercise_ds
Write a python script that accepts a list of integers separated by spaces.
Convert this into a list of integers but square each element.
Print this list.

Example:
Input:
1 2 3 4

Output:
[1, 4, 9, 16]

Solution:
text  = input()
result= []
for item in text.split():
	x = int(item)
	result.append(x*x)
print(result)



7)List methods_exercise_ds
Write a Python Script that takes a string from the user (with empty prompt).
Convert this string into a list of characters.
Sort this list in ascending order.
Now eliminate any repeated values in this list.
Print the list.

Example
Input
hello

Output
['e', 'h', 'l', 'o']

Solution:
text = input()
chars = list(text)
chars.sort()
result=[]
for c in chars:
	if c not in result:
	  result.append(c)
print(result)





8)List of tuples_exercise_ds
Write a Python script which will take list of integers separated by spaces as user input (with empty prompt).
Convert this into a list of integers but square each element.
Store the integer and its square in a tuple, put this into a list.
Print this list.

Example

Input 
1 2 3 4

Output 
[(1, 1), (2, 4), (3, 9), (4, 16)]

Solution:
text = input()
result = []
for item in text.split():
	x=int(item)
	result.append((x, x*x))
print(result)






9)Simple dictionaries_exercise_ds
Write a Python Script which will take list of integers separated by spaces from the user(with empty prompt).
For each integer, store the string version as the key and the square of the integer value as the value in a dictionary.
Print the resulting dictionary.

Example
Input
1 3 5

Output
{'1': 1, '3': 9, '5': 25}

Solution:
text = input()
d ={}
for item in text.split():
	x=int(item)
	d[item] =x*x
print(d)


10)Mapping using dicts_exercise_ds
Write a Python Script that will take 3 character month code(Lower or Upper Case) from the user (with empty prompt).
Create a mapping from 3 character month name to month number. For Example {’jan’: 1, ’dec’: 12}

Print the month number corresponding to the month the user entered.

Example
Input
Jul

Output
7

Solution:
months=(' Jan feb mar apr may jun jul '  'aug sep oct nov dec').split()
month2mm = { }
for i in range (len(months)):
    month2mm[months[i]] = i+1
text = input()
mon = text[:3}.lower()
print(month2mm[mon])





11)Dictionaries_exercise_ds

Write a Python Script which will take a string from the user(with empty prompt).
Convert this string to lower case.
Count the number of occurrences of each character in the string.
Hint: use a dict
Print the result in sorted order of the characters.

Example
Input
helloo

Output
e 1
h 1
l 2
o 2

Solution:
text = input().lower()
result={}
for char in text:
    if char in result:
        result[char]+=1
    else:
           result[char]=1
for char in sorted(result):
    print(char,result[char])



12) Datestring to date tuple_exercise_ds
You are given date strings of the form “29 Jul, 2009”, or “4 Jan 2008”.
In other words a number, a string and another number, with a comma sometimes separating the items.
Write a Python Script that takes such a string as input and prints a tuple (yyyy, mm, dd) where all three elements are ints.

Example
Input
29 Jan, 2008

Output
(2008, 1, 29)

Solution:
months=(' jan feb mar apr may jun jul '  + 'aug sep oct nov dec').split()
month2mm = { }
for i, month in enumerate(months):
    month2mm[month]=i+1
date = input()
date = date.replace(' , ' ,  '   ')
day, month, year = date.split()
dd, yyyy=int(day), int(year)
mon=month[:3].lower()
mm = month2mm[mon]
print((yyyy, mm, dd))   





